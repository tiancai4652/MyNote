<Window
    x:Class="MyNote.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:MyNote.Controls"
    xmlns:convertor="clr-namespace:MyNote.Convertor"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:MyNote"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Name="window"
    Title="MainWindow"
    Width="802"
    Height="452"
    AllowsTransparency="True"
    Background="Transparent"
    ResizeMode="CanResizeWithGrip"
    WindowStyle="None"
    mc:Ignorable="d">

    <Window.Resources>
        <ResourceDictionary>
            <convertor:Corlor2BackgroundConvertor x:Key="Corlor2BackgroundConvertor" />
            <Style x:Key="BlockUIContainerFocusStyle" TargetType="BlockUIContainer" />
            <Style x:Key="windowButtonClose" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid
                                x:Name="grid"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Margin="{TemplateBinding Margin}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                Background="{DynamicResource colorDarktBrush}">
                                <Image
                                    x:Name="image"
                                    Margin="2"
                                    Source="/Resource/window/close2.png"
                                    Stretch="Uniform" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="grid" Property="Background" Value="{DynamicResource colorDarkGrayBrush}" />
                                    <Setter TargetName="image" Property="Source" Value="/Resource/window/close.png" />
                                </Trigger>
                                <!--<Trigger Property="IsMouseOver" Value="False">
                                    <Setter TargetName="image" Property="Source" Value="../Resources/ImageFromUI/上一页.png" />
                                </Trigger>-->
                                <!--<MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="true" />
                                        <Condition Property="IsMouseOver" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="border" Property="Background" Value="#F6F7F9" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="true" />
                                        <Condition Property="IsPressed" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="border" Property="Background" Value="#F6F7F9" />
                                </MultiTrigger>-->

                            </ControlTemplate.Triggers>
                        </ControlTemplate>

                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="windowButtonMax" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid
                                x:Name="grid"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Margin="{TemplateBinding Margin}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                Background="{DynamicResource colorDarktBrush}">
                                <Image
                                    x:Name="image"
                                    Margin="2"
                                    Source="/Resource/window/max2.png"
                                    Stretch="Uniform" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="grid" Property="Background" Value="{DynamicResource colorDarkGrayBrush}" />
                                    <Setter TargetName="image" Property="Source" Value="/Resource/window/max.png" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>

                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="windowButtonMin" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid
                                x:Name="grid"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Margin="{TemplateBinding Margin}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                Background="{DynamicResource colorDarktBrush}">
                                <Image
                                    x:Name="image"
                                    Margin="2"
                                    Source="/Resource/window/min2.png"
                                    Stretch="Uniform" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="grid" Property="Background" Value="{DynamicResource colorDarkGrayBrush}" />
                                    <Setter TargetName="image" Property="Source" Value="/Resource/window/min.png" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>

                    </Setter.Value>
                </Setter>
            </Style>


            <Color x:Key="colorDark">#202020</Color>
            <Color x:Key="colorDarkGray">#272727</Color>
            <Color x:Key="colorBrightBorder">#BBFFFF</Color>
            <Color x:Key="colorGrayBorder">#BBFFFF</Color>

            <SolidColorBrush x:Key="colorDarktBrush" Color="{StaticResource colorDark}" />
            <SolidColorBrush x:Key="colorDarkGrayBrush" Color="{StaticResource colorDarkGray}" />
            <SolidColorBrush x:Key="colorBrightBorderBrush" Color="{StaticResource colorBrightBorder}" />
            <SolidColorBrush x:Key="colorGrayBorderBrush" Color="{StaticResource colorGrayBorder}" />

        </ResourceDictionary>
    </Window.Resources>
    <Grid>

        <Path Fill="{Binding WindowBorderCorlor, Converter={StaticResource Corlor2BackgroundConvertor}}" StrokeThickness="{Binding BorderThinkess}">
            <Path.Data>
                <RectangleGeometry
                    x:Name="borderGeometry"
                    RadiusX="8"
                    RadiusY="8"
                    Rect="0,0,802,452" />
            </Path.Data>
        </Path>

        <Grid>
            <Grid.Clip>
                <RectangleGeometry
                    x:Name="cornerRadiusGeometry"
                    RadiusX="8"
                    RadiusY="8"
                    Rect="1,1,800,450" />
            </Grid.Clip>
            <Border
                Name="border"
                Background="{Binding MainBackgroundColor, Converter={StaticResource Corlor2BackgroundConvertor}}"
                BorderThickness="0">
                <Grid>
                    <Grid Name="grid">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="25" />
                            <RowDefinition />
                            <RowDefinition Height="25" />
                        </Grid.RowDefinitions>
                        <Grid
                            Name="titleGrid"
                            Grid.Row="0"
                            Background="{Binding Background, ElementName=border}" />
                        <Grid
                            Name="contextGrid"
                            Grid.Row="1"
                            Background="{Binding Background, ElementName=richTextBox}">
                            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">

                                <RichTextBox
                                    Name="richTextBox"
                                    Margin="10,20,0,0"
                                    Background="{Binding TextBackgroundColor, Converter={StaticResource Corlor2BackgroundConvertor}}"
                                    BorderBrush="{x:Null}"
                                    BorderThickness="0"
                                    FontFamily="Segoe UI"
                                    FontSize="{Binding TextFontSize}"
                                    Foreground="White"
                                    IsDocumentEnabled="True"
                                    RenderTransform="{Binding RenderTransform}">

                                    <RichTextBox.Document>

                                        <FlowDocument Name="myFlowDocument" LineHeight="0.5">
                                            <Paragraph>
                                                Text to precede the button...
                                                <!--
                                                    Set the BaselineAlignment property to "Bottom"
                                                    so that the Button aligns properly with the text.
                                                -->
                                                <InlineUIContainer BaselineAlignment="Bottom">
                                                    <Image
                                                        Width="50"
                                                        Height="50"
                                                        HorizontalAlignment="Left"
                                                        Source="/Resource/target.png" />
                                                </InlineUIContainer>
                                                Text to follow the button...</Paragraph>

                                            <BlockUIContainer>
                                                <Image
                                                    Width="50"
                                                    Height="50"
                                                    HorizontalAlignment="Left"
                                                    Source="/Resource/target.png" />
                                            </BlockUIContainer>
                                            <Paragraph>
                                                This is flow content and you can<Bold>edit me!</Bold>
                                            </Paragraph>
                                            <Paragraph>
                                                This is flow content and you can<Bold>edit me!</Bold>
                                            </Paragraph>
                                            <BlockUIContainer FocusVisualStyle="{StaticResource BlockUIContainerFocusStyle}" IsHyphenationEnabled="True">
                                                <StackPanel>
                                                    <Label Foreground="Blue">Choose a value:</Label>
                                                    <ComboBox>
                                                        <ComboBoxItem IsSelected="True">a</ComboBoxItem>
                                                        <ComboBoxItem>b</ComboBoxItem>
                                                        <ComboBoxItem>c</ComboBoxItem>
                                                    </ComboBox>
                                                    <Label Foreground="Red">Choose a value:</Label>
                                                    <StackPanel>
                                                        <RadioButton>x</RadioButton>
                                                        <RadioButton>y</RadioButton>
                                                        <RadioButton>z</RadioButton>
                                                    </StackPanel>
                                                    <Label>Enter a value:</Label>
                                                    <TextBox>
                                                        A text editor embedded in flow content.
                                                    </TextBox>
                                                </StackPanel>
                                            </BlockUIContainer>
                                        </FlowDocument>


                                    </RichTextBox.Document>
                                </RichTextBox>
                            </ScrollViewer>
                        </Grid>
                        <Grid
                            Name="stateGrid"
                            Grid.Row="2"
                            Margin="8"
                            Background="{Binding Background, ElementName=border}" />
                    </Grid>
                    <StackPanel
                        Name="titleGridStackPanel"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Orientation="Horizontal">
                        <Button
                            Name="windowMinBtn"
                            Width="40"
                            Height="{Binding ActualHeight, ElementName=titleGrid}"
                            Click="windowMinBtn_Click"
                            Style="{StaticResource windowButtonMin}" />
                        <Button
                            Name="windowMaxBtn"
                            Width="40"
                            Height="{Binding ActualHeight, ElementName=titleGrid}"
                            Click="windowMaxBtn_Click"
                            Style="{StaticResource windowButtonMax}" />
                        <Button
                            Name="windowCloseBtn"
                            Width="40"
                            Height="{Binding ActualHeight, ElementName=titleGrid}"
                            Click="windowCloseBtn_Click"
                            Style="{StaticResource windowButtonClose}" />
                    </StackPanel>
                </Grid>

            </Border>
        </Grid>
    </Grid>
</Window>
